/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 186);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./platform/plugins/language/resources/assets/js/language.js":
/*!*******************************************************************!*\
  !*** ./platform/plugins/language/resources/assets/js/language.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LanguageManagement = /*#__PURE__*/function () {\n  function LanguageManagement() {\n    _classCallCheck(this, LanguageManagement);\n  }\n\n  _createClass(LanguageManagement, [{\n    key: \"bindEventToElement\",\n    value: function bindEventToElement() {\n      var _this = this;\n\n      if (jQuery().select2) {\n        $('.select-search-language').select2({\n          width: '100%',\n          templateResult: LanguageManagement.formatState,\n          templateSelection: LanguageManagement.formatState\n        });\n      }\n\n      var languageTable = $('.table-language');\n      $(document).on('change', '#language_id', function (event) {\n        var language = $(event.currentTarget).find('option:selected').data('language');\n\n        if (typeof language != 'undefined' && language.length > 0) {\n          $('#lang_name').val(language[2]);\n          $('#lang_locale').val(language[0]);\n          $('#lang_code').val(language[1]);\n          $('#flag_list').val(language[4]).trigger('change');\n          $('.lang_is_' + language[3]).prop('checked', true);\n          $('#btn-language-submit-edit').prop('id', 'btn-language-submit').text('Add new language');\n        }\n      });\n      $(document).on('click', '#btn-language-submit', function (event) {\n        event.preventDefault();\n        var name = $('#lang_name').val();\n        var locale = $('#lang_locale').val();\n        var code = $('#lang_code').val();\n        var flag = $('#flag_list').val();\n        var order = $('#lang_order').val();\n        var is_rtl = $('.lang_is_rtl').prop('checked') ? 1 : 0;\n        LanguageManagement.createOrUpdateLanguage(0, name, locale, code, flag, order, is_rtl, 0);\n      });\n      $(document).on('click', '#btn-language-submit-edit', function (event) {\n        event.preventDefault();\n        var id = $('#lang_id').val();\n        var name = $('#lang_name').val();\n        var locale = $('#lang_locale').val();\n        var code = $('#lang_code').val();\n        var flag = $('#flag_list').val();\n        var order = $('#lang_order').val();\n        var is_rtl = $('.lang_is_rtl').prop('checked') ? 1 : 0;\n        LanguageManagement.createOrUpdateLanguage(id, name, locale, code, flag, order, is_rtl, 1);\n      });\n      languageTable.on('click', '.deleteDialog', function (event) {\n        event.preventDefault();\n        $('.delete-crud-entry').data('section', $(event.currentTarget).data('section'));\n        $('.modal-confirm-delete').modal('show');\n      });\n      $('.delete-crud-entry').on('click', function (event) {\n        event.preventDefault();\n        $('.modal-confirm-delete').modal('hide');\n        var deleteURL = $(event.currentTarget).data('section');\n        $(_this).prop('disabled', true).addClass('button-loading');\n        $.ajax({\n          url: deleteURL,\n          type: 'DELETE',\n          success: function success(data) {\n            if (data.error) {\n              ZHXCore.showError(data.message);\n            } else {\n              if (data.data) {\n                languageTable.find('i[data-id=' + data.data + ']').unwrap();\n                $('.tooltip').remove();\n              }\n\n              languageTable.find('a[data-section=\"' + deleteURL + '\"]').closest('tr').remove();\n              ZHXCore.showSuccess(data.message);\n            }\n\n            $(_this).prop('disabled', false).removeClass('button-loading');\n          },\n          error: function error(data) {\n            $(_this).prop('disabled', false).removeClass('button-loading');\n            ZHXCore.handleError(data);\n          }\n        });\n      });\n      languageTable.on('click', '.set-language-default', function (event) {\n        event.preventDefault();\n\n        var _self = $(event.currentTarget);\n\n        $.ajax({\n          url: _self.data('section'),\n          type: 'GET',\n          success: function success(data) {\n            if (data.error) {\n              ZHXCore.showError(data.message);\n            } else {\n              var star = languageTable.find('td > i');\n              star.replaceWith('<a data-section=\"' + route('languages.set.default') + '?lang_id=' + star.data('id') + '\" class=\"set-language-default tip\" data-original-title=\"Choose ' + star.data('name') + ' as default language\">' + star.closest('td').html() + '</a>');\n\n              _self.find('i').unwrap();\n\n              $('.tooltip').remove();\n              ZHXCore.showSuccess(data.message);\n            }\n          },\n          error: function error(data) {\n            ZHXCore.handleError(data);\n          }\n        });\n      });\n      languageTable.on('click', '.edit-language-button', function (event) {\n        event.preventDefault();\n\n        var _self = $(event.currentTarget);\n\n        $.ajax({\n          url: route('languages.get') + '?lang_id=' + _self.data('id'),\n          type: 'GET',\n          success: function success(data) {\n            if (data.error) {\n              ZHXCore.showError(data.message);\n            } else {\n              var language = data.data;\n              $('#lang_id').val(language.lang_id);\n              $('#lang_name').val(language.lang_name);\n              $('#lang_locale').val(language.lang_locale);\n              $('#lang_code').val(language.lang_code);\n              $('#flag_list').val(language.lang_flag).trigger('change');\n\n              if (language.lang_rtl) {\n                $('.lang_is_rtl').prop('checked', true);\n              }\n\n              $('#lang_order').val(language.lang_order);\n              $('#btn-language-submit').prop('id', 'btn-language-submit-edit').text('Update');\n            }\n          },\n          error: function error(data) {\n            ZHXCore.handleError(data);\n          }\n        });\n      });\n      $(document).on('click', '.button-save-language-settings', function (event) {\n        event.preventDefault();\n\n        var _self = $(event.currentTarget);\n\n        _self.addClass('button-loading');\n\n        var $form = _self.closest('form');\n\n        $.ajax({\n          url: $form.prop('action'),\n          type: 'POST',\n          data: $form.serialize(),\n          success: function success(data) {\n            _self.removeClass('button-loading');\n\n            if (data.error) {\n              ZHXCore.showError(data.message);\n            } else {\n              ZHXCore.showSuccess(data.message);\n              $form.removeClass('dirty');\n            }\n          },\n          error: function error(data) {\n            _self.removeClass('button-loading');\n\n            ZHXCore.handleError(data);\n          }\n        });\n      });\n    }\n  }], [{\n    key: \"formatState\",\n    value: function formatState(state) {\n      if (!state.id || state.element.value.toLowerCase().includes('...')) {\n        return state.text;\n      }\n\n      return $('<span><img src=\"' + $('#language_flag_path').val() + state.element.value.toLowerCase() + '.svg\" class=\"img-flag\" width=\"16\"/> ' + state.text + '</span>');\n    }\n  }, {\n    key: \"createOrUpdateLanguage\",\n    value: function createOrUpdateLanguage(id, name, locale, code, flag, order, is_rtl, edit) {\n      var url = route('languages.store');\n\n      if (edit) {\n        url = route('languages.edit') + '?lang_code=' + code;\n      }\n\n      $('#btn-language-submit').addClass('button-loading');\n      $.ajax({\n        url: url,\n        type: 'POST',\n        data: {\n          lang_id: id,\n          lang_name: name,\n          lang_locale: locale,\n          lang_code: code,\n          lang_flag: flag,\n          lang_order: order,\n          lang_is_rtl: is_rtl\n        },\n        success: function success(data) {\n          if (data.error) {\n            ZHXCore.showError(data.message);\n          } else {\n            if (edit) {\n              $('.table-language').find('tr[data-id=' + id + ']').replaceWith(data.data);\n            } else {\n              $('.table-language').append(data.data);\n            }\n\n            ZHXCore.showSuccess(data.message);\n          }\n\n          $('#language_id').val('').trigger('change');\n          $('#lang_name').val('');\n          $('#lang_locale').val('');\n          $('#lang_code').val('');\n          $('#flag_list').val('').trigger('change');\n          $('.lang_is_ltr').prop('checked', true);\n          $('#btn-language-submit-edit').prop('id', 'btn-language-submit').text('Add new language');\n          $('#btn-language-submit').removeClass('button-loading');\n        },\n        error: function error(data) {\n          $('#btn-language-submit').removeClass('button-loading');\n          ZHXCore.handleError(data);\n        }\n      });\n    }\n  }]);\n\n  return LanguageManagement;\n}();\n\n$(document).ready(function () {\n  new LanguageManagement().bindEventToElement();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./platform/plugins/language/resources/assets/js/language.js\n");

/***/ }),

/***/ 186:
/*!*************************************************************************!*\
  !*** multi ./platform/plugins/language/resources/assets/js/language.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! E:\Jaydeep Mor\Work\Evolution IT Solutions\zhxcore\zhxcore_admin\platform\plugins\language\resources\assets\js\language.js */"./platform/plugins/language/resources/assets/js/language.js");


/***/ })

/******/ });