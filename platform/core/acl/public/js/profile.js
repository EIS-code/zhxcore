/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./platform/core/acl/resources/assets/js/profile.js":
/*!**********************************************************!*\
  !*** ./platform/core/acl/resources/assets/js/profile.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\r\n * Created on 06/09/2015.\r\n */\nvar CropAvatar = /*#__PURE__*/function () {\n  function CropAvatar($element) {\n    _classCallCheck(this, CropAvatar);\n\n    this.$container = $element;\n    this.$avatarView = this.$container.find('.avatar-view');\n    this.$triggerButton = this.$avatarView.find('.mt-overlay .btn-outline');\n    this.$avatar = this.$avatarView.find('img');\n    this.$avatarModal = this.$container.find('#avatar-modal');\n    this.$loading = this.$container.find('.loading');\n    this.$avatarForm = this.$avatarModal.find('.avatar-form');\n    this.$avatarSrc = this.$avatarForm.find('.avatar-src');\n    this.$avatarData = this.$avatarForm.find('.avatar-data');\n    this.$avatarInput = this.$avatarForm.find('.avatar-input');\n    this.$avatarSave = this.$avatarForm.find('.avatar-save');\n    this.$avatarWrapper = this.$avatarModal.find('.avatar-wrapper');\n    this.$avatarPreview = this.$avatarModal.find('.avatar-preview');\n    this.support = {\n      fileList: !!$('<input type=\"file\">').prop('files'),\n      fileReader: !!window.FileReader,\n      formData: !!window.FormData\n    };\n  }\n\n  _createClass(CropAvatar, [{\n    key: \"init\",\n    value: function init() {\n      this.support.datauri = this.support.fileList && this.support.fileReader;\n\n      if (!this.support.formData) {\n        this.initIframe();\n      }\n\n      this.initTooltip();\n      this.initModal();\n      this.addListener();\n    }\n  }, {\n    key: \"addListener\",\n    value: function addListener() {\n      this.$triggerButton.on('click', $.proxy(this.click, this));\n      this.$avatarInput.on('change', $.proxy(this.change, this));\n      this.$avatarForm.on('submit', $.proxy(this.submit, this));\n    }\n  }, {\n    key: \"initTooltip\",\n    value: function initTooltip() {\n      this.$avatarView.tooltip({\n        placement: 'bottom'\n      });\n    }\n  }, {\n    key: \"initModal\",\n    value: function initModal() {\n      this.$avatarModal.modal('hide');\n      this.initPreview();\n    }\n  }, {\n    key: \"initPreview\",\n    value: function initPreview() {\n      var url = this.$avatar.prop('src');\n      this.$avatarPreview.empty().html('<img src=\"' + url + '\">');\n    }\n  }, {\n    key: \"initIframe\",\n    value: function initIframe() {\n      var iframeName = 'avatar-iframe-' + Math.random().toString().replace('.', ''),\n          $iframe = $('<iframe name=\"' + iframeName + '\" style=\"display:none;\"></iframe>'),\n          firstLoad = true,\n          _this = this;\n\n      this.$iframe = $iframe;\n      this.$avatarForm.attr('target', iframeName).after($iframe);\n      this.$iframe.on('load', function () {\n        var data, win, doc;\n\n        try {\n          win = this.contentWindow;\n          doc = this.contentDocument;\n          doc = doc ? doc : win.document;\n          data = doc ? doc.body.innerText : null;\n        } catch (e) {}\n\n        if (data) {\n          _this.submitDone(data);\n        } else if (firstLoad) {\n          firstLoad = false;\n        } else {\n          _this.submitFail('Image upload failed!');\n        }\n\n        _this.submitEnd();\n      });\n    }\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.$avatarModal.modal('show');\n    }\n  }, {\n    key: \"change\",\n    value: function change() {\n      var files, file;\n\n      if (this.support.datauri) {\n        files = this.$avatarInput.prop('files');\n\n        if (files.length > 0) {\n          file = files[0];\n\n          if (CropAvatar.isImageFile(file)) {\n            this.read(file);\n          }\n        }\n      } else {\n        file = this.$avatarInput.val();\n\n        if (CropAvatar.isImageFile(file)) {\n          this.syncUpload();\n        }\n      }\n    }\n  }, {\n    key: \"submit\",\n    value: function submit() {\n      if (!this.$avatarSrc.val() && !this.$avatarInput.val()) {\n        ZHXCore.showError('Please select image!');\n        return false;\n      }\n\n      if (this.support.formData) {\n        this.ajaxUpload();\n        return false;\n      }\n    }\n  }, {\n    key: \"read\",\n    value: function read(file) {\n      var _this = this,\n          fileReader = new FileReader();\n\n      fileReader.readAsDataURL(file);\n\n      fileReader.onload = function () {\n        _this.url = this.result;\n\n        _this.startCropper();\n      };\n    }\n  }, {\n    key: \"startCropper\",\n    value: function startCropper() {\n      var _this = this;\n\n      if (this.active) {\n        this.$img.cropper('replace', this.url);\n      } else {\n        this.$img = $('<img src=\"' + this.url + '\">');\n        this.$avatarWrapper.empty().html(this.$img);\n        this.$img.cropper({\n          aspectRatio: 1,\n          rotatable: true,\n          preview: this.$avatarPreview.selector,\n          done: function done(data) {\n            var json = ['{\"x\":' + data.x, '\"y\":' + data.y, '\"height\":' + data.height, '\"width\":' + data.width + \"}\"].join();\n\n            _this.$avatarData.val(json);\n          }\n        });\n        this.active = true;\n      }\n    }\n  }, {\n    key: \"stopCropper\",\n    value: function stopCropper() {\n      if (this.active) {\n        this.$img.cropper('destroy');\n        this.$img.remove();\n        this.active = false;\n      }\n    }\n  }, {\n    key: \"ajaxUpload\",\n    value: function ajaxUpload() {\n      var url = this.$avatarForm.attr('action'),\n          data = new FormData(this.$avatarForm[0]),\n          _this = this;\n\n      $.ajax(url, {\n        type: 'POST',\n        data: data,\n        processData: false,\n        contentType: false,\n        beforeSend: function beforeSend() {\n          _this.submitStart();\n        },\n        success: function success(data) {\n          _this.submitDone(data);\n        },\n        error: function error(XMLHttpRequest, textStatus, errorThrown) {\n          _this.submitFail(XMLHttpRequest.responseJSON, textStatus || errorThrown);\n        },\n        complete: function complete() {\n          _this.submitEnd();\n        }\n      });\n    }\n  }, {\n    key: \"syncUpload\",\n    value: function syncUpload() {\n      this.$avatarSave.trigger('click');\n    }\n  }, {\n    key: \"submitStart\",\n    value: function submitStart() {\n      this.$loading.fadeIn();\n      this.$avatarSave.attr('disabled', true).text('Saving...');\n    }\n  }, {\n    key: \"submitDone\",\n    value: function submitDone(data) {\n      try {\n        data = $.parseJSON(data);\n      } catch (e) {}\n\n      if (data && !data.error) {\n        if (data.data) {\n          this.url = data.data.url;\n\n          if (this.support.datauri || this.uploaded) {\n            this.uploaded = false;\n            this.cropDone();\n          } else {\n            this.uploaded = true;\n            this.$avatarSrc.val(this.url);\n            this.startCropper();\n          }\n\n          this.$avatarInput.val('');\n          ZHXCore.showSuccess(data.message);\n        } else {\n          ZHXCore.showError(data.message);\n        }\n      } else {\n        ZHXCore.showError(data.message);\n      }\n    }\n  }, {\n    key: \"submitEnd\",\n    value: function submitEnd() {\n      this.$loading.fadeOut();\n      this.$avatarSave.removeAttr('disabled').text('Save');\n    }\n  }, {\n    key: \"cropDone\",\n    value: function cropDone() {\n      this.$avatarSrc.val('');\n      this.$avatarData.val('');\n      this.$avatar.prop('src', this.url);\n      $('.user-menu img').prop('src', this.url);\n      $('.user.dropdown img').prop('src', this.url);\n      this.stopCropper();\n      this.initModal();\n    }\n  }], [{\n    key: \"isImageFile\",\n    value: function isImageFile(file) {\n      if (file.type) {\n        return /^image\\/\\w+$/.test(file.type);\n      }\n\n      return /\\.(jpg|jpeg|png|gif)$/.test(file);\n    }\n  }, {\n    key: \"submitFail\",\n    value: function submitFail(errors) {\n      ZHXCore.handleError(errors);\n    }\n  }]);\n\n  return CropAvatar;\n}();\n\n$(document).ready(function () {\n  new CropAvatar($('.crop-avatar')).init();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./platform/core/acl/resources/assets/js/profile.js\n");

/***/ }),

/***/ 1:
/*!****************************************************************!*\
  !*** multi ./platform/core/acl/resources/assets/js/profile.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! E:\Jaydeep Mor\Work\Evolution IT Solutions\zhxcore\zhxcore_admin\platform\core\acl\resources\assets\js\profile.js */"./platform/core/acl/resources/assets/js/profile.js");


/***/ })

/******/ });